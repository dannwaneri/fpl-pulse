import React, { useState } from 'react';

const Header = () => {
  const [isHovered, setIsHovered] = useState(false);

  return (
    <header className="bg-gradient-to-r from-white to-green-50 shadow-lg py-6 px-6 mb-8 border-b border-green-100" role="banner">
      <div className="container mx-auto flex flex-col sm:flex-row items-center justify-between">
        <div 
          className="flex items-center mb-6 sm:mb-0 group transition-all duration-300 hover:scale-105"
          onMouseEnter={() => setIsHovered(true)}
          onMouseLeave={() => setIsHovered(false)}
          role="presentation"
        >
          <div className="mr-4 relative" aria-hidden="true">
            <svg width="52" height="52" viewBox="0 0 50 50" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="FPL Pulse logo">
              {/* Circle background with animated pulse on hover */}
              <circle 
                cx="25" 
                cy="25" 
                r="23" 
                fill="#f0f9ff" 
                stroke="#10b981" 
                strokeWidth="2.5" 
                className={`transition-all duration-500 ${isHovered ? 'animate-pulse' : ''}`}
              />
              
              {/* Pulse line with animated effect */}
              <path 
                d="M7 25 L15 25 L18 15 L23 35 L27 20 L32 28 L36 25 L43 25" 
                stroke="#10b981" 
                strokeWidth="3" 
                strokeLinecap="round" 
                strokeLinejoin="round"
                fill="none" 
                className={`${isHovered ? 'animate-pulse' : ''}`}
              />
              
              {/* Soccer ball icon */}
              <circle cx="25" cy="25" r="5" fill="#f0f9ff" stroke="#10b981" strokeWidth="1.5" />
              <path 
                d="M25 22 L27 24.5 L25 27 L23 24.5 Z" 
                fill="#10b981" 
                stroke="#10b981" 
                strokeWidth="0.5" 
              />
              <path 
                d="M22 23 L23 25.5 L22 28" 
                fill="none" 
                stroke="#10b981" 
                strokeWidth="0.5" 
                strokeLinecap="round" 
              />
              <path 
                d="M28 23 L27 25.5 L28 28" 
                fill="none" 
                stroke="#10b981" 
                strokeWidth="0.5" 
                strokeLinecap="round" 
              />
            </svg>
            {/* Add a subtle glow effect on hover */}
            {isHovered && (
              <div className="absolute inset-0 rounded-full bg-green-400 opacity-20 blur-md"></div>
            )}
          </div>
          <div>
            <h1 className="text-3xl font-bold text-gray-800">
              <span className="text-green-600 font-extrabold">FPL</span> 
              <span className="relative">
                Pulse
                {isHovered && (
                  <span className="absolute -bottom-1 left-0 w-full h-0.5 bg-green-500 transform origin-left"></span>
                )}
              </span>
            </h1>
            <p className="text-sm text-green-600 font-medium tracking-wide" role="doc-subtitle">Live Fantasy Premier League Tracker</p>
          </div>
        </div>
        
        <nav className="flex bg-white rounded-full shadow-md px-3 py-2 border border-gray-100" role="navigation" aria-label="Main navigation">
          <NavLink href="/" icon={HomeIcon} text="Dashboard" />
          <NavLink href="/rankings" icon={ChartIcon} text="Rankings" />
          <NavLink href="/teams" icon={TeamIcon} text="Teams" />
          <NavLink href="/fixtures" icon={CalendarIcon} text="Fixtures" />
        </nav>
      </div>
    </header>
  );
};

// Extracted navigation link component for better organization
const NavLink = ({ href, icon: Icon, text }) => (
  <a 
    href={href} 
    className="px-4 py-2 text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50 rounded-full transition-all duration-200 flex items-center mx-1"
    role="menuitem"
    tabIndex="0"
  >
    <Icon className="w-4 h-4 mr-2" aria-hidden="true" />
    {text}
  </a>
);

// Icon components for cleaner SVG usage
const HomeIcon = ({ className }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
  </svg>
);

const ChartIcon = ({ className }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
  </svg>
);

const TeamIcon = ({ className }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
  </svg>
);

const CalendarIcon = ({ className }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
  </svg>
);

export default Header;